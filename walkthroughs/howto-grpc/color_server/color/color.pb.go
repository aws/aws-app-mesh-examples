// Code generated by protoc-gen-go. DO NOT EDIT.
// source: color.proto

package color

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Color int32

const (
	Color_NO_COLOR Color = 0
	Color_RED      Color = 1
	Color_BLUE     Color = 2
	Color_GREEN    Color = 3
	Color_YELLOW   Color = 4
	Color_ORANGE   Color = 5
	Color_PURPLE   Color = 6
	Color_PINK     Color = 7
	Color_BLACK    Color = 8
	Color_WHITE    Color = 9
)

var Color_name = map[int32]string{
	0: "NO_COLOR",
	1: "RED",
	2: "BLUE",
	3: "GREEN",
	4: "YELLOW",
	5: "ORANGE",
	6: "PURPLE",
	7: "PINK",
	8: "BLACK",
	9: "WHITE",
}

var Color_value = map[string]int32{
	"NO_COLOR": 0,
	"RED":      1,
	"BLUE":     2,
	"GREEN":    3,
	"YELLOW":   4,
	"ORANGE":   5,
	"PURPLE":   6,
	"PINK":     7,
	"BLACK":    8,
	"WHITE":    9,
}

func (x Color) String() string {
	return proto.EnumName(Color_name, int32(x))
}

func (Color) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83c7eb30498dece0, []int{0}
}

type GetColorRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetColorRequest) Reset()         { *m = GetColorRequest{} }
func (m *GetColorRequest) String() string { return proto.CompactTextString(m) }
func (*GetColorRequest) ProtoMessage()    {}
func (*GetColorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83c7eb30498dece0, []int{0}
}

func (m *GetColorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetColorRequest.Unmarshal(m, b)
}
func (m *GetColorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetColorRequest.Marshal(b, m, deterministic)
}
func (m *GetColorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetColorRequest.Merge(m, src)
}
func (m *GetColorRequest) XXX_Size() int {
	return xxx_messageInfo_GetColorRequest.Size(m)
}
func (m *GetColorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetColorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetColorRequest proto.InternalMessageInfo

type GetColorResponse struct {
	Color                Color    `protobuf:"varint,1,opt,name=color,proto3,enum=color.Color" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetColorResponse) Reset()         { *m = GetColorResponse{} }
func (m *GetColorResponse) String() string { return proto.CompactTextString(m) }
func (*GetColorResponse) ProtoMessage()    {}
func (*GetColorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83c7eb30498dece0, []int{1}
}

func (m *GetColorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetColorResponse.Unmarshal(m, b)
}
func (m *GetColorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetColorResponse.Marshal(b, m, deterministic)
}
func (m *GetColorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetColorResponse.Merge(m, src)
}
func (m *GetColorResponse) XXX_Size() int {
	return xxx_messageInfo_GetColorResponse.Size(m)
}
func (m *GetColorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetColorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetColorResponse proto.InternalMessageInfo

func (m *GetColorResponse) GetColor() Color {
	if m != nil {
		return m.Color
	}
	return Color_NO_COLOR
}

type SetColorRequest struct {
	Color                Color    `protobuf:"varint,1,opt,name=color,proto3,enum=color.Color" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetColorRequest) Reset()         { *m = SetColorRequest{} }
func (m *SetColorRequest) String() string { return proto.CompactTextString(m) }
func (*SetColorRequest) ProtoMessage()    {}
func (*SetColorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83c7eb30498dece0, []int{2}
}

func (m *SetColorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetColorRequest.Unmarshal(m, b)
}
func (m *SetColorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetColorRequest.Marshal(b, m, deterministic)
}
func (m *SetColorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetColorRequest.Merge(m, src)
}
func (m *SetColorRequest) XXX_Size() int {
	return xxx_messageInfo_SetColorRequest.Size(m)
}
func (m *SetColorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetColorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetColorRequest proto.InternalMessageInfo

func (m *SetColorRequest) GetColor() Color {
	if m != nil {
		return m.Color
	}
	return Color_NO_COLOR
}

type SetColorResponse struct {
	Color                Color    `protobuf:"varint,1,opt,name=color,proto3,enum=color.Color" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetColorResponse) Reset()         { *m = SetColorResponse{} }
func (m *SetColorResponse) String() string { return proto.CompactTextString(m) }
func (*SetColorResponse) ProtoMessage()    {}
func (*SetColorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83c7eb30498dece0, []int{3}
}

func (m *SetColorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetColorResponse.Unmarshal(m, b)
}
func (m *SetColorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetColorResponse.Marshal(b, m, deterministic)
}
func (m *SetColorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetColorResponse.Merge(m, src)
}
func (m *SetColorResponse) XXX_Size() int {
	return xxx_messageInfo_SetColorResponse.Size(m)
}
func (m *SetColorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetColorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetColorResponse proto.InternalMessageInfo

func (m *SetColorResponse) GetColor() Color {
	if m != nil {
		return m.Color
	}
	return Color_NO_COLOR
}

type Flakiness struct {
	Rate                 float32  `protobuf:"fixed32,1,opt,name=rate,proto3" json:"rate,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Flakiness) Reset()         { *m = Flakiness{} }
func (m *Flakiness) String() string { return proto.CompactTextString(m) }
func (*Flakiness) ProtoMessage()    {}
func (*Flakiness) Descriptor() ([]byte, []int) {
	return fileDescriptor_83c7eb30498dece0, []int{4}
}

func (m *Flakiness) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flakiness.Unmarshal(m, b)
}
func (m *Flakiness) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flakiness.Marshal(b, m, deterministic)
}
func (m *Flakiness) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flakiness.Merge(m, src)
}
func (m *Flakiness) XXX_Size() int {
	return xxx_messageInfo_Flakiness.Size(m)
}
func (m *Flakiness) XXX_DiscardUnknown() {
	xxx_messageInfo_Flakiness.DiscardUnknown(m)
}

var xxx_messageInfo_Flakiness proto.InternalMessageInfo

func (m *Flakiness) GetRate() float32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *Flakiness) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type GetFlakinessRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFlakinessRequest) Reset()         { *m = GetFlakinessRequest{} }
func (m *GetFlakinessRequest) String() string { return proto.CompactTextString(m) }
func (*GetFlakinessRequest) ProtoMessage()    {}
func (*GetFlakinessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83c7eb30498dece0, []int{5}
}

func (m *GetFlakinessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlakinessRequest.Unmarshal(m, b)
}
func (m *GetFlakinessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlakinessRequest.Marshal(b, m, deterministic)
}
func (m *GetFlakinessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlakinessRequest.Merge(m, src)
}
func (m *GetFlakinessRequest) XXX_Size() int {
	return xxx_messageInfo_GetFlakinessRequest.Size(m)
}
func (m *GetFlakinessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlakinessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlakinessRequest proto.InternalMessageInfo

type GetFlakinessResponse struct {
	Flakiness            *Flakiness `protobuf:"bytes,1,opt,name=flakiness,proto3" json:"flakiness,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetFlakinessResponse) Reset()         { *m = GetFlakinessResponse{} }
func (m *GetFlakinessResponse) String() string { return proto.CompactTextString(m) }
func (*GetFlakinessResponse) ProtoMessage()    {}
func (*GetFlakinessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83c7eb30498dece0, []int{6}
}

func (m *GetFlakinessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlakinessResponse.Unmarshal(m, b)
}
func (m *GetFlakinessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlakinessResponse.Marshal(b, m, deterministic)
}
func (m *GetFlakinessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlakinessResponse.Merge(m, src)
}
func (m *GetFlakinessResponse) XXX_Size() int {
	return xxx_messageInfo_GetFlakinessResponse.Size(m)
}
func (m *GetFlakinessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlakinessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlakinessResponse proto.InternalMessageInfo

func (m *GetFlakinessResponse) GetFlakiness() *Flakiness {
	if m != nil {
		return m.Flakiness
	}
	return nil
}

type SetFlakinessRequest struct {
	Flakiness            *Flakiness `protobuf:"bytes,1,opt,name=flakiness,proto3" json:"flakiness,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SetFlakinessRequest) Reset()         { *m = SetFlakinessRequest{} }
func (m *SetFlakinessRequest) String() string { return proto.CompactTextString(m) }
func (*SetFlakinessRequest) ProtoMessage()    {}
func (*SetFlakinessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_83c7eb30498dece0, []int{7}
}

func (m *SetFlakinessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFlakinessRequest.Unmarshal(m, b)
}
func (m *SetFlakinessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFlakinessRequest.Marshal(b, m, deterministic)
}
func (m *SetFlakinessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFlakinessRequest.Merge(m, src)
}
func (m *SetFlakinessRequest) XXX_Size() int {
	return xxx_messageInfo_SetFlakinessRequest.Size(m)
}
func (m *SetFlakinessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFlakinessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetFlakinessRequest proto.InternalMessageInfo

func (m *SetFlakinessRequest) GetFlakiness() *Flakiness {
	if m != nil {
		return m.Flakiness
	}
	return nil
}

type SetFlakinessResponse struct {
	Flakiness            *Flakiness `protobuf:"bytes,1,opt,name=flakiness,proto3" json:"flakiness,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SetFlakinessResponse) Reset()         { *m = SetFlakinessResponse{} }
func (m *SetFlakinessResponse) String() string { return proto.CompactTextString(m) }
func (*SetFlakinessResponse) ProtoMessage()    {}
func (*SetFlakinessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_83c7eb30498dece0, []int{8}
}

func (m *SetFlakinessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFlakinessResponse.Unmarshal(m, b)
}
func (m *SetFlakinessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFlakinessResponse.Marshal(b, m, deterministic)
}
func (m *SetFlakinessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFlakinessResponse.Merge(m, src)
}
func (m *SetFlakinessResponse) XXX_Size() int {
	return xxx_messageInfo_SetFlakinessResponse.Size(m)
}
func (m *SetFlakinessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFlakinessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetFlakinessResponse proto.InternalMessageInfo

func (m *SetFlakinessResponse) GetFlakiness() *Flakiness {
	if m != nil {
		return m.Flakiness
	}
	return nil
}

func init() {
	proto.RegisterEnum("color.Color", Color_name, Color_value)
	proto.RegisterType((*GetColorRequest)(nil), "color.GetColorRequest")
	proto.RegisterType((*GetColorResponse)(nil), "color.GetColorResponse")
	proto.RegisterType((*SetColorRequest)(nil), "color.SetColorRequest")
	proto.RegisterType((*SetColorResponse)(nil), "color.SetColorResponse")
	proto.RegisterType((*Flakiness)(nil), "color.Flakiness")
	proto.RegisterType((*GetFlakinessRequest)(nil), "color.GetFlakinessRequest")
	proto.RegisterType((*GetFlakinessResponse)(nil), "color.GetFlakinessResponse")
	proto.RegisterType((*SetFlakinessRequest)(nil), "color.SetFlakinessRequest")
	proto.RegisterType((*SetFlakinessResponse)(nil), "color.SetFlakinessResponse")
}

func init() { proto.RegisterFile("color.proto", fileDescriptor_83c7eb30498dece0) }

var fileDescriptor_83c7eb30498dece0 = []byte{
	// 374 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xcf, 0x4f, 0xe2, 0x40,
	0x1c, 0xc5, 0x69, 0xa1, 0xd0, 0x7e, 0x69, 0x96, 0xd9, 0x81, 0xdd, 0x25, 0xec, 0x85, 0xf4, 0x44,
	0x3c, 0x70, 0x80, 0xc8, 0xcd, 0x03, 0xe0, 0x50, 0x09, 0x4d, 0x4b, 0x66, 0x24, 0xc4, 0x93, 0x41,
	0x1c, 0x13, 0x22, 0xa1, 0xd8, 0x56, 0xfd, 0x7f, 0xfc, 0x4b, 0xcd, 0x4c, 0x8b, 0xe5, 0x97, 0x46,
	0x8d, 0xb7, 0xd7, 0xd7, 0xf7, 0x3e, 0xf3, 0x9d, 0xce, 0x14, 0x8a, 0x73, 0x7f, 0xe9, 0x07, 0xcd,
	0x75, 0xe0, 0x47, 0x3e, 0xd6, 0xe4, 0x83, 0xf5, 0x1b, 0x4a, 0x36, 0x8f, 0xfa, 0x42, 0x53, 0xfe,
	0xf0, 0xc8, 0xc3, 0xc8, 0xea, 0x00, 0x4a, 0xad, 0x70, 0xed, 0xaf, 0x42, 0x8e, 0x2d, 0x88, 0xf3,
	0x55, 0xa5, 0xae, 0x34, 0x7e, 0xb5, 0xcc, 0x66, 0x8c, 0x8a, 0x43, 0x09, 0xea, 0x14, 0x4a, 0x6c,
	0x17, 0xf5, 0xa9, 0x5a, 0x07, 0x10, 0xfb, 0xce, 0x72, 0x6d, 0x30, 0x06, 0xcb, 0xd9, 0xfd, 0x62,
	0xc5, 0xc3, 0x10, 0x63, 0xc8, 0x05, 0xb3, 0x88, 0xcb, 0xbc, 0x4a, 0xa5, 0x16, 0xde, 0xdc, 0xbf,
	0xe5, 0x55, 0xb5, 0xae, 0x34, 0x34, 0x2a, 0xb5, 0xf5, 0x07, 0xca, 0x36, 0x8f, 0xde, 0x7a, 0x9b,
	0x2d, 0x0f, 0xa0, 0xb2, 0x6b, 0x27, 0x73, 0x34, 0xc1, 0xb8, 0xdb, 0x98, 0x92, 0x5d, 0x6c, 0xa1,
	0x64, 0x96, 0x34, 0x9c, 0x46, 0x2c, 0x02, 0x65, 0x76, 0x88, 0xff, 0x32, 0x66, 0x00, 0x15, 0xf6,
	0x03, 0xe3, 0x9c, 0x3c, 0x83, 0x26, 0x3f, 0x19, 0x36, 0x41, 0x77, 0xbd, 0xeb, 0xbe, 0xe7, 0x78,
	0x14, 0x65, 0x70, 0x01, 0xb2, 0x94, 0x9c, 0x23, 0x05, 0xeb, 0x90, 0xeb, 0x39, 0x13, 0x82, 0x54,
	0x6c, 0x80, 0x66, 0x53, 0x42, 0x5c, 0x94, 0xc5, 0x00, 0xf9, 0x2b, 0xe2, 0x38, 0xde, 0x14, 0xe5,
	0x84, 0xf6, 0x68, 0xd7, 0xb5, 0x09, 0xd2, 0x84, 0x1e, 0x4f, 0xe8, 0xd8, 0x21, 0x28, 0x2f, 0x8a,
	0xe3, 0xa1, 0x3b, 0x42, 0x05, 0x51, 0xec, 0x39, 0xdd, 0xfe, 0x08, 0xe9, 0x42, 0x4e, 0x2f, 0x86,
	0x97, 0x04, 0x19, 0xad, 0x17, 0x15, 0x4c, 0xb9, 0x32, 0xe3, 0xc1, 0xd3, 0x62, 0xce, 0xf1, 0x19,
	0xe8, 0x9b, 0x3b, 0x85, 0xff, 0x26, 0x23, 0xef, 0xdd, 0xbb, 0xda, 0xbf, 0x03, 0x3f, 0xde, 0xb6,
	0x95, 0x11, 0x75, 0xb6, 0x5f, 0x67, 0xef, 0xd4, 0xd9, 0x61, 0x7d, 0x08, 0xe6, 0xf6, 0xf1, 0xe2,
	0x5a, 0xba, 0xd2, 0xfe, 0x59, 0xd5, 0xfe, 0x1f, 0x7d, 0xb7, 0x8d, 0x62, 0xc7, 0x50, 0xec, 0x03,
	0x14, 0x3b, 0x8a, 0xba, 0xc9, 0xcb, 0x1f, 0xb1, 0xfd, 0x1a, 0x00, 0x00, 0xff, 0xff, 0xc3, 0x77,
	0xf0, 0xd9, 0x97, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ColorServiceClient is the client API for ColorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ColorServiceClient interface {
	GetColor(ctx context.Context, in *GetColorRequest, opts ...grpc.CallOption) (*GetColorResponse, error)
	SetColor(ctx context.Context, in *SetColorRequest, opts ...grpc.CallOption) (*SetColorResponse, error)
	GetFlakiness(ctx context.Context, in *GetFlakinessRequest, opts ...grpc.CallOption) (*GetFlakinessResponse, error)
	SetFlakiness(ctx context.Context, in *SetFlakinessRequest, opts ...grpc.CallOption) (*SetFlakinessResponse, error)
}

type colorServiceClient struct {
	cc *grpc.ClientConn
}

func NewColorServiceClient(cc *grpc.ClientConn) ColorServiceClient {
	return &colorServiceClient{cc}
}

func (c *colorServiceClient) GetColor(ctx context.Context, in *GetColorRequest, opts ...grpc.CallOption) (*GetColorResponse, error) {
	out := new(GetColorResponse)
	err := c.cc.Invoke(ctx, "/color.ColorService/GetColor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colorServiceClient) SetColor(ctx context.Context, in *SetColorRequest, opts ...grpc.CallOption) (*SetColorResponse, error) {
	out := new(SetColorResponse)
	err := c.cc.Invoke(ctx, "/color.ColorService/SetColor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colorServiceClient) GetFlakiness(ctx context.Context, in *GetFlakinessRequest, opts ...grpc.CallOption) (*GetFlakinessResponse, error) {
	out := new(GetFlakinessResponse)
	err := c.cc.Invoke(ctx, "/color.ColorService/GetFlakiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *colorServiceClient) SetFlakiness(ctx context.Context, in *SetFlakinessRequest, opts ...grpc.CallOption) (*SetFlakinessResponse, error) {
	out := new(SetFlakinessResponse)
	err := c.cc.Invoke(ctx, "/color.ColorService/SetFlakiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ColorServiceServer is the server API for ColorService service.
type ColorServiceServer interface {
	GetColor(context.Context, *GetColorRequest) (*GetColorResponse, error)
	SetColor(context.Context, *SetColorRequest) (*SetColorResponse, error)
	GetFlakiness(context.Context, *GetFlakinessRequest) (*GetFlakinessResponse, error)
	SetFlakiness(context.Context, *SetFlakinessRequest) (*SetFlakinessResponse, error)
}

// UnimplementedColorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedColorServiceServer struct {
}

func (*UnimplementedColorServiceServer) GetColor(ctx context.Context, req *GetColorRequest) (*GetColorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetColor not implemented")
}
func (*UnimplementedColorServiceServer) SetColor(ctx context.Context, req *SetColorRequest) (*SetColorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetColor not implemented")
}
func (*UnimplementedColorServiceServer) GetFlakiness(ctx context.Context, req *GetFlakinessRequest) (*GetFlakinessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFlakiness not implemented")
}
func (*UnimplementedColorServiceServer) SetFlakiness(ctx context.Context, req *SetFlakinessRequest) (*SetFlakinessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFlakiness not implemented")
}

func RegisterColorServiceServer(s *grpc.Server, srv ColorServiceServer) {
	s.RegisterService(&_ColorService_serviceDesc, srv)
}

func _ColorService_GetColor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetColorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColorServiceServer).GetColor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/color.ColorService/GetColor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColorServiceServer).GetColor(ctx, req.(*GetColorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColorService_SetColor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetColorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColorServiceServer).SetColor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/color.ColorService/SetColor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColorServiceServer).SetColor(ctx, req.(*SetColorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColorService_GetFlakiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFlakinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColorServiceServer).GetFlakiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/color.ColorService/GetFlakiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColorServiceServer).GetFlakiness(ctx, req.(*GetFlakinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ColorService_SetFlakiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetFlakinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ColorServiceServer).SetFlakiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/color.ColorService/SetFlakiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ColorServiceServer).SetFlakiness(ctx, req.(*SetFlakinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ColorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "color.ColorService",
	HandlerType: (*ColorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetColor",
			Handler:    _ColorService_GetColor_Handler,
		},
		{
			MethodName: "SetColor",
			Handler:    _ColorService_SetColor_Handler,
		},
		{
			MethodName: "GetFlakiness",
			Handler:    _ColorService_GetFlakiness_Handler,
		},
		{
			MethodName: "SetFlakiness",
			Handler:    _ColorService_SetFlakiness_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "color.proto",
}
