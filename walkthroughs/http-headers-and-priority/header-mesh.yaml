Resources:
  Mesh:
    Type: AWS::AppMesh::Mesh
    Properties:
      MeshName: !Ref AWS::StackName

  ColorRouter:
    Type: AWS::AppMesh::VirtualRouter
    DependsOn:
    - Mesh
    Properties:
      MeshName: !Ref AWS::StackName
      VirtualRouterName: 'color-router'
      Spec:
        Listeners:
        - PortMapping:
            Port: 8080
            Protocol: http

  ColorService:
    Type: AWS::AppMesh::VirtualService
    DependsOn:
    - ColorRouter
    Properties:
      MeshName: !Ref AWS::StackName
      VirtualServiceName: !Sub 'color.${AWS::StackName}.local'
      Spec:
        Provider:
          VirtualRouter:
            VirtualRouterName: 'color-router'

  FrontNode:
    Type: AWS::AppMesh::VirtualNode
    DependsOn:
    - ColorRouter
    Properties:
      MeshName: !Ref AWS::StackName
      VirtualNodeName: 'front-node'
      Spec:
        Backends:
        - VirtualService:
            VirtualServiceName: !Sub 'color.${AWS::StackName}.local'
        Listeners:
        - PortMapping:
            Port: 8080
            Protocol: http
          HealthCheck:
            Protocol: http
            Path: '/ping'
            HealthyThreshold: 2
            UnhealthyThreshold: 2
            TimeoutMillis: 2000
            IntervalMillis: 5000
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: !Sub '${AWS::StackName}.local'
            ServiceName: 'front'

  BlueNode:
    Type: AWS::AppMesh::VirtualNode
    DependsOn:
    - Mesh
    Properties:
      MeshName: !Ref AWS::StackName
      VirtualNodeName: 'blue-node'
      Spec:
        Listeners:
        - PortMapping:
            Port: 8080
            Protocol: http
          HealthCheck:
            Protocol: http
            Path: '/ping'
            HealthyThreshold: 2
            UnhealthyThreshold: 2
            TimeoutMillis: 2000
            IntervalMillis: 5000
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: !Sub '${AWS::StackName}.local'
            ServiceName: 'color'
            Attributes:
            - Key: 'ECS_TASK_DEFINITION_FAMILY'
              Value: 'blue'

  GreenNode:
    Type: AWS::AppMesh::VirtualNode
    DependsOn:
    - Mesh
    Properties:
      MeshName: !Ref AWS::StackName
      VirtualNodeName: 'green-node'
      Spec:
        Listeners:
        - PortMapping:
            Port: 8080
            Protocol: http
          HealthCheck:
            Protocol: http
            Path: '/ping'
            HealthyThreshold: 2
            UnhealthyThreshold: 2
            TimeoutMillis: 2000
            IntervalMillis: 5000
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: !Sub '${AWS::StackName}.local'
            ServiceName: 'color'
            Attributes:
            - Key: 'ECS_TASK_DEFINITION_FAMILY'
              Value: 'green'

  RedNode:
    Type: AWS::AppMesh::VirtualNode
    DependsOn:
      - Mesh
    Properties:
      MeshName: !Ref AWS::StackName
      VirtualNodeName: 'red-node'
      Spec:
        Listeners:
          - PortMapping:
              Port: 8080
              Protocol: http
            HealthCheck:
              Protocol: http
              Path: '/ping'
              HealthyThreshold: 2
              UnhealthyThreshold: 2
              TimeoutMillis: 2000
              IntervalMillis: 5000
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: !Sub '${AWS::StackName}.local'
            ServiceName: 'color'
            Attributes:
              - Key: 'ECS_TASK_DEFINITION_FAMILY'
                Value: 'red'

  YellowNode:
    Type: AWS::AppMesh::VirtualNode
    DependsOn:
      - Mesh
    Properties:
      MeshName: !Ref AWS::StackName
      VirtualNodeName: 'yellow-node'
      Spec:
        Listeners:
          - PortMapping:
              Port: 8080
              Protocol: http
            HealthCheck:
              Protocol: http
              Path: '/ping'
              HealthyThreshold: 2
              UnhealthyThreshold: 2
              TimeoutMillis: 2000
              IntervalMillis: 5000
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: !Sub '${AWS::StackName}.local'
            ServiceName: 'color'
            Attributes:
              - Key: 'ECS_TASK_DEFINITION_FAMILY'
                Value: 'yellow'

  ColorRouteBlue:
    Type: AWS::AppMesh::Route
    DependsOn:
    - ColorRouter
    - BlueNode
    Properties:
      MeshName: !Ref AWS::StackName
      VirtualRouterName: 'color-router'
      RouteName: 'color-route-blue'
      Spec:
        HttpRoute:
          Match:
            Prefix: '/'
          Action:
            WeightedTargets:
            - VirtualNode: 'blue-node'
              Weight: 100

  ColorRouteGreen:
    Type: AWS::AppMesh::Route
    DependsOn:
      - ColorRouter
      - GreenNode
    Properties:
      MeshName: !Ref AWS::StackName
      VirtualRouterName: 'color-router'
      RouteName: 'color-route-green'
      Spec:
        HttpRoute:
          Match:
            Prefix: '/'
          Action:
            WeightedTargets:
              - VirtualNode: 'green-node'
                Weight: 100

  ColorRouteRed:
    Type: AWS::AppMesh::Route
    DependsOn:
      - ColorRouter
      - RedNode
    Properties:
      MeshName: !Ref AWS::StackName
      VirtualRouterName: 'color-router'
      RouteName: 'color-route-red'
      Spec:
        HttpRoute:
          Match:
            Prefix: '/'
          Action:
            WeightedTargets:
              - VirtualNode: 'red-node'
                Weight: 100

  ColorRouteYellow:
    Type: AWS::AppMesh::Route
    DependsOn:
      - ColorRouter
      - YellowNode
    Properties:
      MeshName: !Ref AWS::StackName
      VirtualRouterName: 'color-router'
      RouteName: 'color-route-yellow'
      Spec:
        HttpRoute:
          Match:
            Prefix: '/'
          Action:
            WeightedTargets:
              - VirtualNode: 'yellow-node'
                Weight: 100